## yml and not yaml becuase circleci is picky
version: 2

general:
  branches:
    only:
      - master
      - dev

jobs:
  checkout:
    docker:
      - image: aherrmann13/dotnet-sdk:2.2
    steps:
      - run:
          name: create common dir
          command: mkdir /tmp/detroitharps
      - run:
          name: set dir permissions to all
          command: chmod 777 /tmp/detroitharps
      - checkout:
          path: /tmp/detroitharps
      - save_cache:
          key: checkout-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /tmp/detroitharps

  test:
    docker:
      - image: aherrmann13/dotnet-sdk:2.2
    steps:
      - restore_cache:
          key: checkout-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Test
          command: /tmp/detroitharps/scripts/dotnet-test.sh

  publish-api:
    docker:
      - image: aherrmann13/dotnet-sdk:2.2
    steps:
      - restore_cache:
          key: checkout-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Publish DataAccess.Migrator
          command: dotnet publish /tmp/detroitharps/src/DataAccess.Migrator/ -c RELEASE -o /tmp/detroitharps/publish/DataAccess.Migrator
      - run:
          name: Publish Api
          command: dotnet publish /tmp/detroitharps/src/Api/ -c RELEASE -o /tmp/detroitharps/publish/Api
      - run:
          name: Copy Configuration
          command: cp -r /tmp/detroitharps/configuration /tmp/detroitharps/publish
      - save_cache:
          key: publish-api-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /tmp/detroitharps/publish

  publish-client:
    docker:
      - image: circleci/node:10.24.0
        environment:
          NG_CLI_ANALYTICS: "false"
    steps:
      - restore_cache:
          key: checkout-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Npm Install
          command: |
            cd /tmp/detroitharps/src/Client/
            sudo -E npm install
      - run:
          name: nglint and prettier
          command: |
            cd /tmp/detroitharps/src/Client/
            sudo npm run lint
      - run:
          ## this step needs to be cleaner
          name: Build Client
          command: |
            cd /tmp/detroitharps/src/Client/
            echo $CIRCLE_BRANCH
            if [ "$CIRCLE_BRANCH" = "master" ]; then sudo npm run build -- --output-path /tmp/detroitharps/publish/Client; fi
            if [ "$CIRCLE_BRANCH" = "dev" ]; then sudo npm run build-dev -- --output-path /tmp/detroitharps/publish/Client; fi
      - save_cache:
          key: publish-client-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /tmp/detroitharps/publish

  deploy-dev:
    docker:
      - image: aherrmann13/dotnet-sdk:2.2
        environment:
          IP_ADDRESS: "157.230.51.199"
          SSH_ADDR: "detroitharps@157.230.51.199"
          DEPLOY_FOLDER: "/detroitharps/publish"
          RUN_FOLDER: "/detroitharps/application"
    steps:
      - restore_cache:
          key: publish-api-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: publish-client-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Copy SSH fingerprint to known hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan -H $IP_ADDRESS >> ~/.ssh/known_hosts
      - run:
          name: Copy Publish Folder to Server
          command: |
            ssh $SSH_ADDR "if [ -d $DEPLOY_FOLDER ]; then rm -rf $DEPLOY_FOLDER; fi"
            ssh $SSH_ADDR "mkdir -p $DEPLOY_FOLDER"
            scp -r /tmp/detroitharps/publish/* $SSH_ADDR:$DEPLOY_FOLDER
      - run:
          name: Copy to Run Folder
          command: |
            ssh $SSH_ADDR "if [ -d $RUN_FOLDER ]; then rm -rf $RUN_FOLDER; fi"
            ssh $SSH_ADDR "mkdir -p $RUN_FOLDER"
            ssh $SSH_ADDR "cp -r $DEPLOY_FOLDER/* $RUN_FOLDER/"
      - run:
          name: Migrate Database
          command: |
            ssh $SSH_ADDR "dotnet $DEPLOY_FOLDER/DataAccess.Migrator/DetroitHarps.DataAccess.Migrator.dll Migrate"
      - run:
          name: Install Service
          command: |
            ssh $SSH_ADDR "sudo ln -sf $DEPLOY_FOLDER/configuration/dev/systemd/detroitharps-api.service /etc/systemd/system/detroitharps-api.service"
            ssh $SSH_ADDR "sudo systemctl restart detroitharps-api.service"
      - run:
          name: Stop Nginx
          command: ssh $SSH_ADDR "sudo systemctl stop nginx"
      - run:
          name: Update Api Nginx Config
          command: ssh $SSH_ADDR "sudo ln -sf $DEPLOY_FOLDER/configuration/dev/nginx/dev.api.detroitharps.com /etc/nginx/sites-enabled/dev.api.detroitharps.com"
      - run:
          name: Update Client Nginx Config
          command: ssh $SSH_ADDR "sudo ln -sf $DEPLOY_FOLDER/configuration/dev/nginx/dev.detroitharps.com /etc/nginx/sites-enabled/dev.detroitharps.com"
      - run:
          name: Start Nginx
          command: ssh $SSH_ADDR "sudo systemctl start nginx"

  deploy-prod:
    docker:
      - image: aherrmann13/dotnet-sdk:2.2
        environment:
          IP_ADDRESS: "134.209.77.76"
          SSH_ADDR: "detroitharps@134.209.77.76"
          DEPLOY_FOLDER: "/detroitharps/publish"
          RUN_FOLDER: "/detroitharps/application"
    steps:
      - restore_cache:
          key: publish-api-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: publish-client-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Copy SSH fingerprint to known hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan -H $IP_ADDRESS >> ~/.ssh/known_hosts
      - run:
          name: Copy Publish Folder to Server
          command: |
            ssh $SSH_ADDR "if [ -d $DEPLOY_FOLDER ]; then rm -rf $DEPLOY_FOLDER; fi"
            ssh $SSH_ADDR "mkdir -p $DEPLOY_FOLDER"
            scp -r /tmp/detroitharps/publish/* $SSH_ADDR:$DEPLOY_FOLDER
      - run:
          name: Copy to Run Folder
          command: |
            ssh $SSH_ADDR "if [ -d $RUN_FOLDER ]; then rm -rf $RUN_FOLDER; fi"
            ssh $SSH_ADDR "mkdir -p $RUN_FOLDER"
            ssh $SSH_ADDR "cp -r $DEPLOY_FOLDER/* $RUN_FOLDER/"
      - run:
          name: Move appsettings.yaml over
          command: |
            ssh $SSH_ADDR "rm $RUN_FOLDER/Api/appsettings.yaml"
            ssh $SSH_ADDR "rm $RUN_FOLDER/DataAccess.Migrator/appsettings.yaml"
            ssh $SSH_ADDR "cp ~/appsettings.yaml $RUN_FOLDER/Api/"
            ssh $SSH_ADDR "cp ~/appsettings.yaml $RUN_FOLDER/DataAccess.Migrator/"
      - run:
          name: Migrate Database
          command: |
            ssh $SSH_ADDR "dotnet $DEPLOY_FOLDER/DataAccess.Migrator/DetroitHarps.DataAccess.Migrator.dll Migrate"
      - run:
          name: Install Service
          command: |
            ssh $SSH_ADDR "sudo ln -sf $DEPLOY_FOLDER/configuration/prod/systemd/detroitharps-api.service /etc/systemd/system/detroitharps-api.service"
            ssh $SSH_ADDR "sudo systemctl restart detroitharps-api.service"
      - run:
          name: Stop Nginx
          command: ssh $SSH_ADDR "sudo systemctl stop nginx"
      - run:
          name: Update Api Nginx Config
          command: ssh $SSH_ADDR "sudo ln -sf $DEPLOY_FOLDER/configuration/prod/nginx/api.detroitharps.com /etc/nginx/sites-enabled/api.detroitharps.com"
      - run:
          name: Update Client Nginx Config
          command: ssh $SSH_ADDR "sudo ln -sf $DEPLOY_FOLDER/configuration/prod/nginx/detroitharps.com /etc/nginx/sites-enabled/detroitharps.com"
      - run:
          name: Start Nginx
          command: ssh $SSH_ADDR "sudo systemctl start nginx"

  health-check-dev:
    # TODO: machine not dotnet sdk
    docker:
      - image: aherrmann13/dotnet-sdk:2.2
    steps:
      - restore_cache:
          key: checkout-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Health Check
          command: "/tmp/detroitharps/scripts/health-check.sh https://dev.api.detroitharps.com/health"

  health-check-prod:
    # TODO: machine not dotnet sdk
    docker:
      - image: aherrmann13/dotnet-sdk:2.2
    steps:
      - restore_cache:
          key: checkout-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Health Check
          command: "/tmp/detroitharps/scripts/health-check.sh https://api.detroitharps.com/health"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout:
          filters:
            branches:
              only:
                - dev
                - master
      - test:
          requires:
            - checkout
      - publish-api:
          requires:
            - checkout
      - publish-client:
          requires:
            - checkout
      - deploy-dev:
          requires:
            - publish-api
            - publish-client
            - test
          filters:
            branches:
              only:
                - dev
      - deploy-prod:
          requires:
            - publish-api
            - publish-client
            - test
          filters:
            branches:
              only:
                - master
      - health-check-dev:
          requires:
            - deploy-dev
      - health-check-prod:
          requires:
            - deploy-prod
